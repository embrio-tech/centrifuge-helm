apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "node.fullname" . }}
  labels:
    {{- include "node.labels" . | nindent 4 }}
spec:
  {{- if and .Values.global.forceClean (not .Release.IsInstall) }}
  replicas: 0
  {{- else }}
  replicas: 1
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "node.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.command }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.dbSecretName }}
                  key: dbname
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.dbSecretName }}
                  key: host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.dbSecretName }}
                  key: user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.dbSecretName }}
                  key: password
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.dbSecretName }}
                  key: port
            - name: NODE_ID
              value: {{ .Values.nodeId }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
            - secretRef:
                name: {{ .Values.global.apiSecretName }}
          {{- with .Values.envFrom }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
